[
  {
    "id": 1,
    "name": "One Line A Day",
    "description": "One Line a Day is a user-friendly note-taking web application with a smooth and attractive user interface.",
    "image": "https://images.unsplash.com/photo-1518611507436-f9221403cca2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1525&q=80",
    "tech_stack": {
      "frontend": ["ReactJS", "Redux", "CSS", "SASS", "Axios"],
      "backend": [
        "NodeJS",
        "Express",
        "Knex",
        "PostgresQL",
        "Jest",
        "SQLlite3",
        "JSON Web Token"
      ]
    },
    "deploy_link": "https://1lineadayapp.netlify.app/",
    "code_link": "https://github.com/Build-Week-OneLineADay/FE",
    "project_info": [
      "Built responsive and user-friendly landing/marketing page using HTML/CSS.",
      "Worked with a team of full stack developers to deliver a user-friendly note-taking web application in one week.",
      "Collaborated with Front end engineers to make sure user experience and application style was consistent throughout the entire application."
    ]
  },
  {
    "id": 2,
    "name": "Use My Tools",
    "description": "Use My Tools is an application where users can rent out or borrow tools from other users with ease.",
    "image": "https://images.unsplash.com/photo-1534398079543-7ae6d016b86a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80",
    "tech_stack": {
      "frontend": ["ReactJS", "Redux", "CSS", "Axios"],
      "backend": [
        "NodeJS",
        "Express",
        "Knex",
        "PostgresQL",
        "Jest",
        "SQLlite3",
        "JSON web token"
      ]
    },
    "deploy_link": "https://mytools.netlify.app/",
    "code_link": "https://github.com/buildweek-use-my-tools/front-end",
    "project_info": [
      "Built out the Front End interface and integrated with our backend to deliver full create, read, update, and delete functionality for the project data.",
      "Collaborated with other Front End engineers and Backend engineer to deliver the project to the required specification over the course of one week."
    ]
  },
  {
    "id": 3,
    "name": "Chef Portfolio",
    "description": "Chef Portfolio is an application for chefs to share their amazing creations with the world.",
    "image": "https://images.unsplash.com/photo-1498579809087-ef1e558fd1da?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80",
    "tech_stack": {
      "frontend": ["ReactJS", "Redux", "CSS", "Sass", "MaterialUI", "Axios"],
      "backend": [
        "NodeJS",
        "Express",
        "Knex",
        "PostgresQL",
        "Jest",
        "SQLlite3",
        "JSON web token"
      ]
    },
    "deploy_link": "https://chefportapp.netlify.app/",
    "code_link": "https://github.com/Chef-Portfolio-9/Front-End",
    "project_info": [
      "Worked as lead react engineer with a team of three other full-stack developers to plan and deliver the application in one week to designated speciﬁcation, and on time.",
      "Collaborated with the back-end engineer often throughout the project to ensure seamless integration with the server/database.",
      "Solely responsible for building login/authentication flow using JSON web token and bcrypt for secure password encryption.",
      "Planned and implemented Create/Read/Update/Delete functionality for User and Recipe data across the application."
    ]
  },
  {
    "id": 4,
    "name": "Kansha Rewards",
    "description": "Kansha is a peer to peer recognition application designed to increase employee engagement, and reduce voluntary turnover.",
    "image": "https://images.unsplash.com/photo-1454165804606-c3d57bc86b40?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80",
    "tech_stack": {
      "frontend": ["ReactJS", "Redux", "CSS", "SASS", "Axios"],
      "backend": [
        "NodeJS",
        "Express",
        "Knex",
        "PostgresQL",
        "Jest",
        "SQLite3",
        "JSON web token",
        "Auth0"
      ]
    },
    "deploy_link": "https://kansharewards.com/",
    "code_link": "https://github.com/Lambda-School-Labs/kansha-fe",
    "project_info": [
      "Worked on a team of seven full-stack developers, and one UX designer to plan and deliver a full-stack production-ready application over the course of two months.",
      "Refactored the entire user onboarding process and helped plan and build the bulk user upload feature which allows new users to upload potentially hundreds of users at once to their organization's account via a CSV ﬁle.",
      "Built out multiple dynamic components to support the ability of the organization administrator to set up and manage teams within their organization account. This resulted in a usability score greater than 95% from user surveys that were conducted bi-weekly.",
      "Completely Refactored application styling away from MaterialUI, and instead implemented SASS for greater control over application style.",
      "Wrote tests for user authentication for back-end server using Jest framework."
    ]
  },
  {
    "id": 5,
    "name": "Business Card Organizer API",
    "description": "Business Card Organizer is an application designed to help users share and collect business cards.",
    "image": "https://images.unsplash.com/photo-1517502884422-41eaead166d4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2725&q=80",
    "tech_stack": {
      "frontend": ["ReactJS", "CSS", "Axios", "Context API"],
      "backend": [
        "Node",
        "Express",
        "Knex",
        "PostgresQL",
        "Jest",
        "SQLite3",
        "JSON web token"
      ]
    },
    "deploy_link": "https://business-card-collector.herokuapp.com/",
    "code_link": "https://github.com/Build-Week-Business-Card-Organizer-2/Backend",
    "project_info": [
      "Worked to deliver an API used in an application to help people organize and share business card information on an easy to use platform.",
      "Designed Database schema and implemented RESTful API to serve up data to a ReactJS client",
      "Built out routes and database models to serve up 100% Create/Read/Update/Delete functionality to Front End.",
      "Wrote tests for 100% of application endpoints using Jest testing framework, adhered to test driven development pattern by consistently testing routes as they were completed."
    ]
  }
]
